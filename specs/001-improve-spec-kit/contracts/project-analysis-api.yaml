openapi: 3.0.3
info:
  title: Project Analysis API
  description: API for analyzing existing projects and determining project characteristics
  version: 1.0.0
  contact:
    name: Spec-Kit Enhancement Initiative
    url: https://github.com/github/spec-kit

servers:
  - url: /api/v1
    description: Project analysis API

paths:
  /analyze/project:
    post:
      summary: Analyze project structure and characteristics
      description: Performs comprehensive analysis of an existing project to determine type, architecture, and context
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectAnalysisRequest'
      responses:
        '200':
          description: Project analysis completed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProjectAnalysisResponse'
        '400':
          description: Invalid request or project path
        '500':
          description: Analysis failed

  /analyze/architecture:
    post:
      summary: Detect architectural patterns
      description: Analyzes project architecture and detects patterns, frameworks, and best practices
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchitectureAnalysisRequest'
      responses:
        '200':
          description: Architecture analysis completed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArchitectureAnalysisResponse'

components:
  schemas:
    ProjectAnalysisRequest:
      type: object
      required:
        - project_path
        - analysis_depth
      properties:
        project_path:
          type: string
          description: Path to the project root directory
          example: "/path/to/project"
        analysis_depth:
          type: string
          enum: [quick, standard, deep]
          description: Depth of analysis to perform
        include_dependencies:
          type: boolean
          description: Whether to analyze dependency tree
          default: true
        detect_frameworks:
          type: boolean
          description: Whether to detect frameworks
          default: true

    ProjectAnalysisResponse:
      type: object
      properties:
        project_type:
          type: string
          enum: [greenfield, brownfield, ongoing, prototype]
          description: Classification of project type
        architecture_patterns:
          type: array
          items:
            type: string
          description: Detected architectural patterns
        tech_stack:
          type: object
          properties:
            languages:
              type: array
              items:
                type: string
            frameworks:
              type: array
              items:
                type: string
            databases:
              type: array
              items:
                type: string
        dependencies:
          type: object
          description: Dependency mapping and compatibility analysis
        complexity_score:
          type: integer
          minimum: 1
          maximum: 10
          description: Project complexity assessment
        recommendations:
          type: array
          items:
            type: string
          description: Recommended actions based on analysis

    ArchitectureAnalysisRequest:
      type: object
      required:
        - project_analysis
      properties:
        project_analysis:
          $ref: '#/components/schemas/ProjectAnalysisResponse'
        framework_specific:
          type: boolean
          description: Generate framework-specific guidance
          default: true

    ArchitectureAnalysisResponse:
      type: object
      properties:
        framework_patterns:
          type: object
          description: Framework-specific patterns and best practices
        folder_structures:
          type: array
          items:
            type: string
          description: Recommended directory organization
        code_standards:
          type: object
          description: Framework-specific coding standards
        integration_patterns:
          type: array
          items:
            type: string
          description: Cross-component integration approaches
        performance_guidelines:
          type: array
          items:
            type: string
          description: Framework-specific performance recommendations

    Error:
      type: object
      properties:
        error:
          type: string
          description: Error message
        code:
          type: string
          description: Error code
        details:
          type: object
          description: Additional error details